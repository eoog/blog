version: '3'
services:
  # ZooKeeper: Kafka 클러스터의 분산 조정 서비스
  zookeeper:
    image: 'bitnami/zookeeper:3.7.2'  # 사용할 ZooKeeper 이미지와 버전
    container_name: zookeeper  # 컨테이너 이름 설정
    ports:
      - 2181:2181  # ZooKeeper의 기본 포트를 호스트와 컨테이너에 매핑
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes  # 익명 로그인 허용 (보안상 주의 필요)
    volumes:  # 데이터 영속성을 위한 볼륨 마운트
      - ./.data/zookeeper/data:/bitnami/zookeeper/data  # ZooKeeper 데이터 저장
      - ./.data/zookeeper/datalog:/bitnami/zookeeper/datalog  # ZooKeeper 데이터 로그 저장
      - ./.data/zookeeper/logs:/bitnami/zookeeper/logs  # ZooKeeper 로그 저장

  # Kafka Broker 1: Kafka 클러스터의 첫 번째 브로커
  kafka1:
    image: 'bitnami/kafka:3.6.0'  # 사용할 Kafka 이미지와 버전
    container_name: kafka1  # 컨테이너 이름 설정
    hostname: kafka1  # 호스트 이름 설정
    ports:
      - 19092  # 내부 통신용 포트
      - "9092:9092"  # 외부 접근용 포트 (호스트의 9092 포트를 컨테이너의 9092 포트에 매핑)
    environment:
      - KAFKA_BROKER_ID=1  # Kafka 브로커 ID 설정
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181  # ZooKeeper 연결 정보
      - ALLOW_PLAINTEXT_LISTENER=yes  # 암호화되지 않은 연결 허용
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT  # 리스너별 보안 프로토콜 설정
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9092  # Kafka 리스너 설정
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:19092,EXTERNAL://localhost:9092  # 외부에 광고할 리스너 주소
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT  # 브로커 간 통신에 사용할 리스너 이름
    depends_on:
      - zookeeper  # ZooKeeper 서비스에 의존성 설정 (ZooKeeper가 먼저 시작되어야 함)
    volumes:
      - ./.data/kafka1:/bitnami/kafka/data  # Kafka 데이터의 영속성을 위한 볼륨 마운트

  # Kafka Broker 2: Kafka 클러스터의 두 번째 브로커
  kafka2:
    image: 'bitnami/kafka:3.6.0'
    container_name: kafka2
    ports:
      - 19092
      - "9093:9093"  # 외부 접근용 포트 (호스트의 9093 포트를 컨테이너의 9093 포트에 매핑)
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:19092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka2:/bitnami/kafka/data

  # Kafka Broker 3: Kafka 클러스터의 세 번째 브로커
  kafka3:
    image: 'bitnami/kafka:3.6.0'
    container_name: kafka3
    ports:
      - 19092
      - "9094:9094"  # 외부 접근용 포트 (호스트의 9094 포트를 컨테이너의 9094 포트에 매핑)
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:19092,EXTERNAL://localhost:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka3:/bitnami/kafka/data

  # Kafka UI: Kafka 클러스터를 모니터링하고 관리하기 위한 웹 인터페이스
  kafka-ui:
    image: 'provectuslabs/kafka-ui:v0.7.1'  # Kafka UI 이미지와 버전
    container_name: kafka-ui  # 컨테이너 이름 설정
    ports:
      - "8081:8080"  # 호스트의 8081 포트를 컨테이너의 8080 포트에 매핑
    environment:
      - KAFKA_CLUSTERS_0_NAME=local  # Kafka 클러스터 이름 설정
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:19092,kafka2:19092,kafka3:19092  # Kafka 브로커 주소 설정
    depends_on:  # 의존성 설정 (아래 서비스들이 먼저 시작되어야 함)
      - zookeeper
      - kafka1
      - kafka2
      - kafka3

  # CMAK (Cluster Manager for Apache Kafka): Kafka 클러스터 관리를 위한 또 다른 웹 인터페이스
  cmak:
    image: 'hlebalbau/kafka-manager:3.0.0.5'  # CMAK 이미지와 버전
    container_name: cmak  # 컨테이너 이름 설정
    ports:
      - "9000:9000"  # 호스트의 9000 포트를 컨테이너의 9000 포트에 매핑
    environment:
      - ZK_HOSTS=zookeeper:2181  # ZooKeeper 호스트 설정
    depends_on:  # 의존성 설정
      - zookeeper
      - kafka1
      - kafka2
      - kafka3

  # Redpanda Console: Kafka 클러스터를 위한 현대적인 웹 UI
  redpanda-console:
    image: 'docker.redpanda.com/redpandadata/console:v2.3.7'  # Redpanda Console 이미지와 버전
    container_name: redpanda-console  # 컨테이너 이름 설정
    ports:
      - "8989:8080"  # 호스트의 8989 포트를 컨테이너의 8080 포트에 매핑
    environment:
      - KAFKA_BROKERS=kafka1:19092,kafka2:19092,kafka3:19092  # Kafka 브로커 주소 설정
    depends_on:  # 의존성 설정
      - zookeeper
      - kafka1
      - kafka2
      - kafka3

  # MySQL: 관계형 데이터베이스 서버
  mysql:
    image: 'mysql:8.0.35'  # MySQL 이미지와 버전
    container_name: mysql  # 컨테이너 이름 설정
    ports:
      - "3306:3306"  # 호스트의 3306 포트를 컨테이너의 3306 포트에 매핑
    environment:
      - MYSQL_ROOT_PASSWORD=1234  # MySQL root 사용자의 비밀번호 설정
      - MYSQL_DATABASE=campus  # 생성할 초기 데이터베이스 이름
      - MYSQL_USER=myuser  # 생성할 MySQL 사용자 이름
      - MYSQL_PASSWORD=mypassword  # 생성할 MySQL 사용자의 비밀번호
    volumes:
      - ./.data/mysql:/var/lib/mysql  # MySQL 데이터의 영속성을 위한 볼륨 마운트
