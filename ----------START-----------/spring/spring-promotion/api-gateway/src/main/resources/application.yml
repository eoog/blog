server:
  port: 8000

spring:
  application:
    name: api-gateway

  data:
    redis:
      host: localhost
      port: 6379

  cloud:
    gateway:
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1
            key-resolver: "#{@userKeyResolver}"
      routes:
        - id: public-user-service # 퍼블릭 허용 인증 안받아도 되는곳
          uri: lb://USER-SERVICE # eureka 에 등록된 Application
          predicates:
            - Path=/api/v1/users/signup, /api/v1/users/login, /api/v1/users/token/validate-token, /api/v1/users/refresh-token
        - id: user-service # 인증받아야 적용
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/**
          filters:
            - name: CircuitBreaker
              args:
                name: userServiceBreaker
                fallbackUri: forward:/fallback/users
            - name: JwtAuthenticationFilter

resilience4j:
  circuitbreaker:
    instances:
      authCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 5 # 서킷 브레이커가 고려할 최근 호출 수
        minimumNumberOfCalls: 10 # 최소 호출 횟수, 이 수를 넘어야 서킷 브레이커의 상태가 변경됨
        permittedNumberOfCallsInHalfOpenState: 10 # 반-열린 상태에서 허용되는 호출 수
        automaticTransitionFromOpenToHalfOpenEnabled: true # 서킷 브레이커가 자동으로 반-열린 상태로 전환되는지 여부
        waitDurationInOpenState: 5000 # 서킷 브레이커가 열린 상태로 유지되는 시간
        failureRateThreshold: 50 # 실패율 기준, 이 비율을 초과하는 실패가 발생하면 서킷 브레이커가 열립니다
        eventConsumerBufferSize: 10
        record-exceptions:
          - java.util.concurrent.TimeoutException
          - org.springframework.cloud.gateway.support.NotFoundException
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException